version: '3.8'

services:
  nodejs-server:
    image: nodejs-server
    container_name: nodejs-server
    build:
      context: ./server
      dockerfile: ./Dockerfile
    working_dir: /usr/src/app
    command: 'nodemon -L server.js'
    restart: always
    ports:
      - '8080:8081'
    volumes:
      - ./server:/usr/src/app
    environment:
      PORT: '8081'
      NODE_ENV: 'production' #can be production || development
      JWT_SECRET: '3EK6FD+o0+c7tzBNVfjpMkNDi2yARAAKzQlk8O2IKoxQu4nF7EdAh8s3TwpHwrdWT6R'
      HOST_URL: 'http://localhost'
    depends_on:
      - 'graphql-engine'
    networks:
      - hidro_db_net

  nginx:
    build:
      context: .
      dockerfile: ./nginx/Dockerfile
    image: nginx
    container_name: container-lb
    ports:
      - '80:80'
    networks:
      - hidro_db_net
  #CLIENT SERVER

  #react_client:
  #  build: ./client
  #  working_dir: /usr/src/app
  #  command: "npm run start"
  #  restart: always
  #  ports:
  #    - "80:8085"
  #  volumes:
  #    - ./client/src:/usr/src/app/src
  #    - ./client/public:/usr/src/app/public
  #    - ./usr/src/app/node_modules
  #  environment:
  #    -REACT_APP_PORT: "8085"
  #  links:
  #    - nodejs-server

  graphql-engine:
    container_name: graphql-engine
    image: hasura/graphql-engine:v1.3.3
    restart: always
    volumes:
      - ./hasura:/hasura
    ports:
      - '3001:3000'
      - '9893:9693'
      - '9895:9695'
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:postgres@host.docker.internal:5432/hidro_db_dev
      HASURA_GRAPHQL_ENABLE_CONSOLE: 'true'
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log # http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_SERVER_PORT: 3000
      HASURA_GRAPHQL_ADMIN_SECRET: 'myadminsecretkey' # not needed for dev env
      HASURA_GRAPHQL_JWT_SECRET: '{"type":"HS256", "key": "3EK6FD+o0+c7tzBNVfjpMkNDi2yARAAKzQlk8O2IKoxQu4nF7EdAh8s3TwpHwrdWT6R"}' # see hasura/notes.md
      HASURA_GRAPHQL_MIGRATIONS_DIR: /hasura/migrations
    networks:
      - hidro_db_net
networks:
  hidro_db_net:
    driver: bridge
# - "3000:3000"
# - "9693:9693"
# - "9695:9695"
